<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>My New Hugo Site</title>
        <link>http://example.org/</link>
        <description>MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。</description>
        <generator>Hugo 0.68.3 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>me@xiongxuan.me (xiongxuan)</managingEditor>
        
        
            <webMaster>me@xiongxuan.me (xiongxuan)</webMaster>
        
        
            <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
        
        <lastBuildDate>Mon, 26 Apr 2021 23:07:07 &#43;0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="http://example.org/rss.xml" />
        
        
            <item>
                <title>记一次数据库被恶意删除后的反思</title>
                <link>http://example.org/post/reflection-of-database-deleted/</link>
                <guid isPermaLink="true">http://example.org/post/reflection-of-database-deleted/</guid>
                <pubDate>Mon, 26 Apr 2021 21:43:34 &#43;0800</pubDate>
                
                    <author>me@xiongxuan.me (xiongxuan)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;h2 id=&#34;背景&#34;&gt;背景&lt;/h2&gt;
&lt;p&gt;去年疫情，接了个私活，帮别人做了一款手机软件，类似手机的工单系统，一个很简单的 crud 应用。&lt;/p&gt;
&lt;p&gt;开发完成后，在我的服务器上稳定运行了快一年时间。一个月前迁移到甲方自己的服务器上，今后我只负责漏洞的修复，不再负责系统运行维护。&lt;/p&gt;
&lt;h2 id=&#34;事情发生&#34;&gt;事情发生&lt;/h2&gt;
&lt;p&gt;今天早上，甲方的维护人员找到我，要我看一下系统，说数据库没了。&lt;/p&gt;
&lt;p&gt;我心想：what ？我都不知道你们的数据库密码，而且还是你们的服务器，数据库没了我咋看？&lt;/p&gt;
&lt;p&gt;后面甲方说整个数据库被全部删除了，整个库只剩下一张名为 &amp;quot;warning&amp;quot; 的表。&lt;/p&gt;
&lt;p&gt;好家伙，我一开始以为是 hw 行动，他们的服务器被别人攻陷了，但反过来一想，hw 行动不会真删你的数据，看来是有人搞破坏了。&lt;/p&gt;
&lt;h2 id=&#34;紧急处理&#34;&gt;紧急处理&lt;/h2&gt;
&lt;p&gt;数据被删，短时间内无法恢复，我们决定紧急切换到之前我那台服务器。于是客户端重新打包，将请求地址改回之前的服务器地址，发布强制更新（请求更新的 url 是独立的，没有受到影响）。&lt;/p&gt;
&lt;p&gt;虽然操作简单，但还是花了近两个小时才恢复服务。主要是客户端太久没有编译，要更新很多库，导致编译的时间拉长。&lt;/p&gt;
&lt;h2 id=&#34;排查问题&#34;&gt;排查问题&lt;/h2&gt;
&lt;p&gt;被恶意删库，还修改了表结构，肯定是数据库密码泄露或者被爆破。&lt;/p&gt;
&lt;p&gt;首先考虑服务的漏洞导致数据库密码泄露。我使用的是 spring boot + spring security + hibernate，数据库连接信息使用配置文件记录。排查线上日志未发现明显恶意的请求，业务中不会将数据库信息暴露在返回信息中，数据库中间件会防范 SQL 注入，也未发现我使用的库版本有严重漏洞的情况。因此这种可能先跳过，排查其它可能性。&lt;/p&gt;
&lt;p&gt;考虑数据库被恶意爆破。我建议甲方技术人员查看数据库的登录日志，查看是否有恶意爆破的情况，但甲方人员没有提供相关信息，可能是数据库未开启登录记录。经询问后得到三个信息：1. 使用 root 用户作为连接用户。 2. root 用户是弱密码。 3. 服务器对外开放了数据库端口。得到这三个信息后，我更倾向于数据库被爆破这种可能，因为数据库和 web 应用在同一台服务器上。&lt;/p&gt;
&lt;p&gt;考虑服务器 root 用户被攻陷，黑客登录服务器后获取到了数据库权限。这一条甲方技术人员倒是提供了服务器的登录日志，排查后未发现 root 用户从其它 ip 登录的情况，当然也不排除黑客将登录信息删除了。&lt;/p&gt;
&lt;p&gt;由于可用信息不足，无法确定具体原因，但此次事件也给了我一些关于如何做好服务器安全的思考。&lt;/p&gt;
&lt;h2 id=&#34;反思&#34;&gt;反思&lt;/h2&gt;
&lt;p&gt;这次的事故导致整个四月数据全部丢失，算是非常重大的损失了。（三月份迁移到新服务器后的数据全部丢失）&lt;/p&gt;
&lt;p&gt;好在使用这个服务的人不多，平均每天几人，要不然就是一次线上的重大事故了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对于特别重要的服务，要做好多服务容灾，当一台服务出现问题时，自动切换到另一台服务上。这次事故发生后切换到老服务的操作上还有提升的空间，“ 重新编译客户端发布新版本 ” 这种方法不够灵活，这也体现了网关的重要性，有了网关就可以灵活切换后台服务。今后还可修改客户端请求地址的流程：从写死在客户端，修改为启动时向配置服务请求各个接口的地址。&lt;/li&gt;
&lt;li&gt;数据库分应用做好隔离，每个应用都使用不同的用户操作数据库，避免一个服务数据库泄露，导致其它服务跟着遭殃。每个应用使用的用户应该被分配一个较低的权限，权限可以细分到表级、字段级，该用户同样只允许内网登录或设定 ip 白名单登录。&lt;/li&gt;
&lt;li&gt;数据库尽量使用单独服务器，不要使用常用端口，并只允许内网连接或者设定 ip 白名单连接，避免被猜到数据库信息。&lt;/li&gt;
&lt;li&gt;一定一定要定时备份数据库。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在开发过程中我也会留意安全问题，我在自己的服务器上做到了上面 234 点（所以才没有人爆破成功吧hhhh），因为这次的服务太小了，所以才没做第一点。&lt;/p&gt;
&lt;p&gt;但身为开发人员，我们对数据安全也应时刻敏感，毕竟互联网时代，数据就是生命。&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                    
                        
                    
                
            </item>
        
    </channel>
</rss>
